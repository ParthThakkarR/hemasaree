// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Link from "next/link";
// import { cookies } from 'next/headers';
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export  default async function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>
// ) {
//   const cookieStore = await cookies();
//   const token = cookieStore.get('token')?.value;

//   return (
//     <html lang="en">
//       <head>
//             <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossOrigin="anonymous"/>

//       </head>
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         <Link href='/admin'>admin</Link>
//         <Link href='/login'>Login</Link>
//         <Link href='/signup'>Signup</Link>
//         {children}
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { cookies } from "next/headers";
import jwt from "jsonwebtoken";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Saree Bazaar",
  description: "Elegant Saree Store",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = await cookies(); // âœ… no await here
  const token = cookieStore.get("token")?.value;

  let isLoggedIn = false; 
  let isAdmin = false;

  if (token) {
    try {
      const decoded = jwt.verify(token, process.env.JWT_SECRET as string) as {
        isAdmin?: boolean;
      };
      isLoggedIn = true;
      isAdmin = decoded.isAdmin === true;
    } catch {
      isLoggedIn = false;
    }
  }

  return (
    <html lang="en">
      <head>
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css"
          rel="stylesheet"
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <nav className="p-3 border-bottom d-flex gap-3">
          <Link href="/">Home</Link>
          <Link href="/pages/cart">cart</Link>
          {isAdmin && <Link href="/admin">Admin</Link>}

          {!isLoggedIn ? (
            <>
              <Link href="/login">Login</Link>
              <Link href="/signup">Signup</Link>
              
            </>
          ) : (
            <form action="/api/logout" method="POST">
              <button className="btn btn-danger btn-sm" type="submit">
                Logout
              </button>
            </form>
          )}
        </nav>

        <main>{children}</main>
      </body>
    </html>
  );
}
